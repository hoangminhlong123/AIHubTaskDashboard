@model AIHubTaskDashboard.Controllers.KPIViewModel
@{
    ViewBag.Title = "KPI Dashboard";
}

<!-- 🔥 Hero Header -->
<div class="hero-header mb-4">
    <div class="row align-items-center">
        <div class="col-md-7">
            <h1 class="fw-bold mb-2">
                <i class="bi bi-graph-up-arrow me-3"></i>
                KPI Dashboard
            </h1>
            <p class="lead mb-0">Theo dõi hiệu suất 3 teams: Admin, Content & Dev</p>
        </div>
        <div class="col-md-5">
            <div class="hero-stats">
                <div class="stat-card">
                    <div class="stat-icon"><i class="bi bi-list-check"></i></div>
                    <div class="stat-info">
                        <div class="stat-value">@Model.TeamKPIs.Values.Sum(t => t.TotalTasks)</div>
                        <div class="stat-label">Total Tasks</div>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon"><i class="bi bi-check-circle-fill"></i></div>
                    <div class="stat-info">
                        <div class="stat-value">@Model.TeamKPIs.Values.Sum(t => t.CompletedTasks)</div>
                        <div class="stat-label">Completed</div>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon"><i class="bi bi-trophy-fill"></i></div>
                    <div class="stat-info">
                        <div class="stat-value">@(Model.TeamKPIs.Values.Sum(t => t.TotalTasks) > 0 ? Math.Round((double)Model.TeamKPIs.Values.Sum(t => t.CompletedTasks) / Model.TeamKPIs.Values.Sum(t => t.TotalTasks) * 100) : 0)%</div>
                        <div class="stat-label">Rate</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 🔥 Team Tabs -->
<div class="tabs-wrapper mb-4">
    <ul class="nav nav-pills team-tabs" id="teamTabs" role="tablist">
        @foreach (var team in Model.AllTeams)
        {
            var isActive = team == Model.CurrentTeam;
            var teamKPI = Model.GetTeamKPI(team);
            var taskCount = teamKPI?.TotalTasks ?? 0;

            var icon = team == "admin" ? "shield-fill-check" : team == "content" ? "file-earmark-text-fill" : "code-square";
            var colorClass = team == "admin" ? "tab-red" : team == "content" ? "tab-orange" : "tab-blue";

            <li class="nav-item">
                <button class="nav-link team-tab @colorClass @(isActive ? "active" : "")"
                        id="@team-tab"
                        data-bs-toggle="pill"
                        data-bs-target="#@team-panel"
                        type="button"
                        role="tab">
                    <div class="tab-icon"><i class="bi bi-@icon"></i></div>
                    <div class="tab-info">
                        <div class="tab-name">@team.ToUpper()</div>
                        <div class="tab-count">@taskCount tasks</div>
                    </div>
                    @if (teamKPI != null && teamKPI.OverdueTasks > 0)
                    {
                        <span class="tab-alert">@teamKPI.OverdueTasks</span>
                    }
                </button>
            </li>
        }
    </ul>
</div>

<!-- 🔥 Content -->
<div class="tab-content" id="teamTabsContent">
    @foreach (var team in Model.AllTeams)
    {
        var isActive = team == Model.CurrentTeam;
        var teamKPI = Model.GetTeamKPI(team);
        if (teamKPI == null) continue;

        <div class="tab-pane fade @(isActive ? "show active" : "")" id="@team-panel" role="tabpanel">

            <!-- KPI Cards -->
            <div class="kpi-row mb-4">
                <div class="kpi-card kpi-primary">
                    <div class="kpi-icon"><i class="bi bi-grid-3x3-gap-fill"></i></div>
                    <div class="kpi-body">
                        <div class="kpi-label">Tổng số Task</div>
                        <div class="kpi-value">@teamKPI.TotalTasks</div>
                    </div>
                    <a href="/Tasks?tag_filter=@team" class="kpi-action">
                        <i class="bi bi-arrow-right-circle-fill"></i>
                    </a>
                </div>

                <div class="kpi-card kpi-success">
                    <div class="kpi-icon"><i class="bi bi-check-circle-fill"></i></div>
                    <div class="kpi-body">
                        <div class="kpi-label">Hoàn thành</div>
                        <div class="kpi-value">@teamKPI.CompletedTasks</div>
                        <div class="kpi-bar">
                            <div class="kpi-bar-fill" style="width: @teamKPI.CompletionRate%"></div>
                        </div>
                        <div class="kpi-percent">@teamKPI.CompletionRate%</div>
                    </div>
                </div>

                <div class="kpi-card kpi-warning">
                    <div class="kpi-icon"><i class="bi bi-hourglass-split"></i></div>
                    <div class="kpi-body">
                        <div class="kpi-label">In Progress</div>
                        <div class="kpi-value">@teamKPI.InProgressTasks</div>
                        <div class="kpi-meta">To Do: @teamKPI.ToDoTasks</div>
                    </div>
                </div>

                <div class="kpi-card kpi-danger">
                    <div class="kpi-icon"><i class="bi bi-exclamation-triangle-fill"></i></div>
                    <div class="kpi-body">
                        <div class="kpi-label">Quá hạn</div>
                        <div class="kpi-value">@teamKPI.OverdueTasks</div>
                        @if (teamKPI.OverdueTasks > 0)
                        {
                            <span class="kpi-badge badge-danger">Cần xử lý!</span>
                        }
                        else
                        {
                            <span class="kpi-badge badge-ok">On track</span>
                        }
                    </div>
                </div>
            </div>

            <!-- Charts Compact -->
            <div class="charts-row mb-4">
                <div class="chart-box">
                    <div class="chart-header">
                        <h6><i class="bi bi-pie-chart-fill me-2"></i>Phân bố trạng thái</h6>
                    </div>
                    <div class="chart-body">
                        <canvas id="chart-@team" height="180"></canvas>
                    </div>
                </div>

                <div class="chart-box chart-wide">
                    <div class="chart-header">
                        <h6><i class="bi bi-bar-chart-fill me-2"></i>Hiệu suất thành viên</h6>
                        <div class="mini-legend">
                            <span><i class="dot bg-secondary"></i>To Do</span>
                            <span><i class="dot bg-warning"></i>Progress</span>
                            <span><i class="dot bg-success"></i>Done</span>
                            <span><i class="dot bg-danger"></i>Overdue</span>
                        </div>
                    </div>
                    <div class="chart-body">
                        @if (teamKPI.TeamMembers.Any())
                        {
                            <canvas id="team-@team" height="180"></canvas>
                        }
                        else
                        {
                            <div class="chart-empty">
                                <i class="bi bi-inbox"></i>
                                <p>Chưa có dữ liệu</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Table -->
            @if (teamKPI.TeamMembers.Any())
            {
                <div class="table-card">
                    <div class="table-header">
                        <h6><i class="bi bi-people-fill me-2"></i>Bảng xếp hạng - @team.ToUpper()</h6>
                        <span class="table-count">@teamKPI.TeamMembers.Count thành viên</span>
                    </div>
                    <div class="table-responsive">
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th width="50">#</th>
                                    <th width="220">Thành viên</th>
                                    <th width="80" class="text-center">Tasks</th>
                                    <th width="80" class="text-center">To Do</th>
                                    <th width="90" class="text-center">Progress</th>
                                    <th width="80" class="text-center">Done</th>
                                    <th width="90" class="text-center">Overdue</th>
                                    <th width="140" class="text-center">Avg %</th>
                                    <th width="80" class="text-center">Rate</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var rank = 1;
                                }
                                @foreach (var member in teamKPI.TeamMembers)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <div class="rank-num rank-@rank">@rank</div>
                                        </td>
                                        <td>
                                            <div class="member-cell">
                                                <div class="member-avatar">@member.UserName.Substring(0, 1).ToUpper()</div>
                                                <div>
                                                    <div class="member-name">@member.UserName</div>
                                                    <div class="member-id">ID: @member.UserId</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center"><span class="cell-badge bg-primary">@member.TotalTasks</span></td>
                                        <td class="text-center"><span class="cell-badge bg-secondary">@member.ToDoTasks</span></td>
                                        <td class="text-center"><span class="cell-badge bg-warning">@member.InProgressTasks</span></td>
                                        <td class="text-center"><span class="cell-badge bg-success">@member.CompletedTasks</span></td>
                                        <td class="text-center">
                                            @if (member.OverdueTasks > 0)
                                            {
                                                <span class="cell-badge bg-danger">@member.OverdueTasks</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">—</span>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <div class="progress-cell">
                                                <div class="progress-mini">
                                                    <div class="progress-fill" style="width: @member.AverageProgress%"></div>
                                                </div>
                                                <span class="progress-text">@member.AverageProgress%</span>
                                            </div>
                                        </td>
                                        <td class="text-center"><span class="rate-badge">@member.CompletionRate%</span></td>
                                    </tr>
                                    rank++;
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const chartData = {};

    @foreach (var team in Model.AllTeams)
    {
        var teamKPI = Model.GetTeamKPI(team);
        if (teamKPI == null) continue;

        <text>
                    chartData['@team'] = {
                        status: {
                            data: [@teamKPI.ToDoTasks, @teamKPI.InProgressTasks, @teamKPI.CompletedTasks, @teamKPI.OverdueTasks],
                            labels: ['To Do', 'In Progress', 'Completed', 'Overdue']
                        },
            @if (teamKPI.TeamMembers.Any())
            {
                <text>
                                members: {
                                    labels: [@Html.Raw(string.Join(",", teamKPI.TeamMembers.Select(m => $"'{m.UserName}'")))],
                                    todo: [@string.Join(",", teamKPI.TeamMembers.Select(m => m.ToDoTasks))],
                                    progress: [@string.Join(",", teamKPI.TeamMembers.Select(m => m.InProgressTasks))],
                                    completed: [@string.Join(",", teamKPI.TeamMembers.Select(m => m.CompletedTasks))],
                                    overdue: [@string.Join(",", teamKPI.TeamMembers.Select(m => m.OverdueTasks))]
                                }
                </text>
            }
                    };
        </text>
    }

        const charts = {};

        function createCharts(team) {
            if (charts[team]) return;
            const data = chartData[team];
            if (!data) return;

            const statusCtx = document.getElementById(`chart-${team}`);
            if (statusCtx) {
                charts[team] = new Chart(statusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: data.status.labels,
                        datasets: [{
                            data: data.status.data,
                            backgroundColor: ['rgba(108,117,125,0.9)', 'rgba(255,193,7,0.9)', 'rgba(25,135,84,0.9)', 'rgba(220,53,69,0.9)'],
                            borderWidth: 0,
                            hoverOffset: 8
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: { padding: 12, font: { size: 11 }, usePointStyle: true }
                            }
                        }
                    }
                });
            }

            if (data.members) {
                const teamCtx = document.getElementById(`team-${team}`);
                if (teamCtx) {
                    new Chart(teamCtx, {
                        type: 'bar',
                        data: {
                            labels: data.members.labels,
                            datasets: [
                                { label: 'To Do', data: data.members.todo, backgroundColor: 'rgba(108,117,125,0.85)', borderRadius: 4 },
                                { label: 'In Progress', data: data.members.progress, backgroundColor: 'rgba(255,193,7,0.85)', borderRadius: 4 },
                                { label: 'Completed', data: data.members.completed, backgroundColor: 'rgba(25,135,84,0.85)', borderRadius: 4 },
                                { label: 'Overdue', data: data.members.overdue, backgroundColor: 'rgba(220,53,69,0.85)', borderRadius: 4 }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            scales: {
                                x: { stacked: true, grid: { display: false } },
                                y: { stacked: true, beginAtZero: true, ticks: { stepSize: 1 } }
                            },
                            plugins: { legend: { display: false } }
                        }
                    });
                }
            }
        }

        createCharts('@Model.CurrentTeam');

        document.querySelectorAll('[data-bs-toggle="pill"]').forEach(tab => {
            tab.addEventListener('shown.bs.tab', function(e) {
                const team = e.target.id.replace('-tab', '');
                createCharts(team);
            });
        });
    });
</script>

<style>
    /* Hero */
    .hero-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 1rem;
        color: white;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.25);
        margin-bottom: 1.5rem;
    }

    .hero-stats {
        display: flex;
        gap: 1rem;
    }

    .stat-card {
        flex: 1;
        background: rgba(255,255,255,0.15);
        backdrop-filter: blur(10px);
        padding: 1rem;
        border-radius: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .stat-icon {
        font-size: 1.75rem;
        width: 45px;
        height: 45px;
        background: rgba(255,255,255,0.2);
        border-radius: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stat-value {
        font-size: 1.75rem;
        font-weight: 700;
        line-height: 1;
    }

    .stat-label {
        font-size: 0.75rem;
        opacity: 0.9;
    }

    /* Tabs */
    .tabs-wrapper {
        background: white;
        padding: 1.25rem;
        border-radius: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    }

    .team-tabs {
        display: flex;
        gap: 1rem;
    }

    .team-tab {
        flex: 1;
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.25rem;
        border-radius: 0.75rem;
        border: 2px solid transparent;
        background: #f8f9fa;
        transition: all 0.3s;
        position: relative;
    }

        .team-tab:not(.active):hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(0,0,0,0.08);
        }

        .team-tab.active {
            color: white;
            box-shadow: 0 8px 20px rgba(0,0,0,0.12);
        }

    .tab-red.active {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }

    .tab-orange.active {
        background: linear-gradient(135deg, #fa709a, #fee140);
    }

    .tab-blue.active {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
    }

    .tab-icon {
        font-size: 1.75rem;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255,255,255,0.2);
        border-radius: 0.5rem;
    }

    .team-tab:not(.active) .tab-icon {
        background: #e9ecef;
        color: #6c757d;
    }

    .tab-info {
        flex: 1;
    }

    .tab-name {
        font-size: 1rem;
        font-weight: 700;
    }

    .tab-count {
        font-size: 0.8rem;
        opacity: 0.9;
    }

    .team-tab:not(.active) .tab-count {
        color: #6c757d;
    }

    .tab-alert {
        background: #dc3545;
        color: white;
        padding: 0.25rem 0.6rem;
        border-radius: 1rem;
        font-size: 0.8rem;
        font-weight: 600;
    }

    /* KPI Cards */
    .kpi-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        gap: 1.25rem;
    }

    .kpi-card {
        background: white;
        border-radius: 0.875rem;
        padding: 1.5rem;
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        transition: all 0.3s;
        position: relative;
        overflow: hidden;
    }

        .kpi-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: currentColor;
        }

        .kpi-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }

    .kpi-primary {
        color: #0d6efd;
    }

    .kpi-success {
        color: #198754;
    }

    .kpi-warning {
        color: #ffc107;
    }

    .kpi-danger {
        color: #dc3545;
    }

    .kpi-icon {
        width: 55px;
        height: 55px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: currentColor;
        color: white;
        border-radius: 0.625rem;
        font-size: 1.5rem;
        flex-shrink: 0;
    }

    .kpi-body {
        flex: 1;
    }

    .kpi-label {
        font-size: 0.8rem;
        font-weight: 600;
        color: #6c757d;
        margin-bottom: 0.5rem;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }

    .kpi-value {
        font-size: 2rem;
        font-weight: 700;
        line-height: 1;
        margin-bottom: 0.5rem;
    }

    .kpi-bar {
        height: 4px;
        background: #e9ecef;
        border-radius: 2px;
        overflow: hidden;
        margin: 0.5rem 0;
    }

    .kpi-bar-fill {
        height: 100%;
        background: currentColor;
        transition: width 0.5s;
    }

    .kpi-percent {
        font-size: 0.9rem;
        font-weight: 600;
    }

    .kpi-meta {
        font-size: 0.8rem;
        color: #6c757d;
    }

    .kpi-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-weight: 600;
    }

    .badge-danger {
        background: rgba(220,53,69,0.1);
        color: #dc3545;
    }

    .badge-ok {
        background: rgba(25,135,84,0.1);
        color: #198754;
    }

    .kpi-action {
        font-size: 1.5rem;
        color: currentColor;
        opacity: 0.6;
        transition: all 0.2s;
    }

        .kpi-action:hover {
            opacity: 1;
            transform: translateX(3px);
        }

    /* Charts */
    .charts-row {
        display: grid;
        grid-template-columns: 1fr 1.8fr;
        gap: 1.25rem;
    }

    .chart-box {
        background: white;
        border-radius: 0.875rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        overflow: hidden;
    }

    .chart-header {
        padding: 1rem 1.25rem;
        border-bottom: 1px solid #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .chart-header h6 {
            margin: 0;
            font-size: 0.95rem;
            font-weight: 700;
            color: #212529;
        }

    .mini-legend {
        display: flex;
        gap: 0.75rem;
        font-size: 0.7rem;
        font-weight: 500;
    }

        .mini-legend span {
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }

    .dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        display: block;
    }

    .chart-body {
        padding: 1.25rem;
    }

    .chart-empty {
        text-align: center;
        padding: 2rem;
        color: #adb5bd;
    }

        .chart-empty i {
            font-size: 2.5rem;
            display: block;
            margin-bottom: 0.5rem;
        }

    /* Table */
    .table-card {
        background: white;
        border-radius: 0.875rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        overflow: hidden;
    }

    .table-header {
        padding: 1rem 1.25rem;
        border-bottom: 1px solid #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

        .table-header h6 {
            margin: 0;
            font-size: 0.95rem;
            font-weight: 700;
            color: #212529;
        }

    .table-count {
        font-size: 0.8rem;
        color: #6c757d;
        background: #f8f9fa;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
    }

    .data-table {
        width: 100%;
        font-size: 0.875rem;
    }

        .data-table thead th {
            background: #f8f9fa;
            padding: 0.75rem 1rem;
            font-size: 0.75rem;
            font-weight: 700;
            text-transform: uppercase;
            color: #495057;
            border: none;
        }

        .data-table tbody tr {
            border-bottom: 1px solid #f8f9fa;
            transition: all 0.2s;
        }

            .data-table tbody tr:hover {
                background: rgba(102,126,234,0.03);
            }

        .data-table tbody td {
            padding: 0.875rem 1rem;
            vertical-align: middle;
        }

    .rank-num {
        width: 32px;
        height: 32px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.5rem;
        font-weight: 700;
        font-size: 0.9rem;
    }

    .rank-1 {
        background: linear-gradient(135deg, #FFD700, #FFA500);
        color: white;
    }

    .rank-2 {
        background: linear-gradient(135deg, #C0C0C0, #999);
        color: white;
    }

    .rank-3 {
        background: linear-gradient(135deg, #CD7F32, #B87333);
        color: white;
    }

    .rank-num:not(.rank-1):not(.rank-2):not(.rank-3) {
        background: #e9ecef;
        color: #6c757d;
    }

    .member-cell {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .member-avatar {
        width: 40px;
        height: 40px;
        border-radius: 0.625rem;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        flex-shrink: 0;
    }

    .member-name {
        font-weight: 600;
        font-size: 0.875rem;
        color: #212529;
    }

    .member-id {
        font-size: 0.7rem;
        color: #adb5bd;
    }

    .cell-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 0.5rem;
        font-weight: 600;
        font-size: 0.8rem;
    }

    .bg-primary {
        background: rgba(13,110,253,0.1);
        color: #0d6efd;
    }

    .bg-secondary {
        background: rgba(108,117,125,0.1);
        color: #6c757d;
    }

    .bg-success {
        background: rgba(25,135,84,0.1);
        color: #198754;
    }

    .bg-warning {
        background: rgba(255,193,7,0.1);
        color: #997404;
    }

    .bg-danger {
        background: rgba(220,53,69,0.1);
        color: #dc3545;
    }

    .progress-cell {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        justify-content: center;
    }

    .progress-mini {
        flex: 1;
        max-width: 80px;
        height: 6px;
        background: #e9ecef;
        border-radius: 3px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #4facfe, #00f2fe);
        border-radius: 3px;
        transition: width 0.5s;
    }

    .progress-text {
        font-weight: 700;
        font-size: 0.8rem;
        color: #495057;
        min-width: 40px;
    }

    .rate-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 0.5rem;
        background: linear-gradient(135deg, #11998e, #38ef7d);
        color: white;
        font-weight: 700;
        font-size: 0.8rem;
    }

    /* Responsive */
    media (max-width: 1200px) {
        .charts-row

    {
        grid-template-columns: 1fr;
    }

    }
    media (max-width: 992px) {
        .hero-stats

    {
        flex-direction: column;
    }

    .stat-card {
        width: 100%;
    }

    .kpi-row {
        grid-template-columns: repeat(2, 1fr);
    }

    }
    media (max-width: 768px) {
        .hero-header h1

    {
        font-size: 1.5rem;
    }

    .kpi-row {
        grid-template-columns: 1fr;
    }

    .team-tabs {
        flex-direction: column;
    }

    .data-table {
        font-size: 0.8rem;
    }

    }

    /* Animations */
    keyframes slideIn {
        from

    {
        opacity: 0;
        transform: translateY(15px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .tab-pane.active {
        animation: slideIn 0.35s ease;
    }

    .kpi-card {
        animation: slideIn 0.4s ease backwards;
    }

        .kpi-card:nth-child(1) {
            animation-delay: 0.05s;
        }

        .kpi-card:nth-child(2) {
            animation-delay: 0.1s;
        }

        .kpi-card:nth-child(3) {
            animation-delay: 0.15s;
        }

        .kpi-card:nth-child(4) {
            animation-delay: 0.2s;
        }
</style> 